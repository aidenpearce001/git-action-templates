name: CI

on: 
  pull_request:
    branches: [testing]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  formatting-and-linting:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Python dependencies
        run: |
          pip install black isort ruff

      - name: Run isort
        run: isort .

      - name: Run black
        run: black .

      - name: Run ruff
        run: ruff check .

  run-pytest:
    needs: formatting-and-linting
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install pytest pytest-cov coverage

      - name: Run pytest with coverage
        run: |
          coverage run -m pytest -rap --junitxml coverage.xml || true
          coverage xml -i 


      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml

  run-bandit:
    needs: formatting-and-linting
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit security analysis
        run: |
          bandit -r . -f json -o bandit-report.json --exit-zero

      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

  run-safety:
    name: Dependency Check
    needs: formatting-and-linting
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install Safety
        run: pip install safety

      - name: Run Safety dependency check
        run: |
          safety check -r requirements.txt

  sonarqube-scan:
    needs: [run-bandit, run-pytest]
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Download Bandit report
      uses: actions/download-artifact@v4
      with:
        name: bandit-report
        path: .

    - name: Download Coverage report
      uses: actions/download-artifact@v4
      with:
        name: coverage
        path: .

    - name: Display structure of downloaded files
      run: ls -R .

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  coverage:
    needs: [run-pytest]
    name: Calculate code coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: .

      - name: Produce the coverage report
        uses: insightsengineering/coverage-action@v2
        with:
          # Path to the Cobertura XML report.
          path: coverage.xml
          # Minimum total coverage, if you want to the
          # workflow to enforce it as a standard.
          # This has no effect if the `fail` arg is set to `false`.
          threshold: 80.123
          # Fail the workflow if the minimum code coverage
          # reuqirements are not satisfied.
          fail: true
          # Publish the rendered output as a PR comment
          publish: true
          # Create a coverage diff report.
          diff: true
          # Branch to diff against.
          # Compare the current coverage to the coverage
          # determined on this branch.
          diff-branch: main
          # This is where the coverage reports for the
          # `diff-branch` are stored.
          # Branch is created if it doesn't already exist'.
          diff-storage: _xml_coverage_reports
          # A custom title that can be added to the code
          # coverage summary in the PR comment.
          coverage-summary-title: "Code Coverage Summary"
