name: CD

on:
  pull_request:
    branches: [deploy]
  workflow_dispatch:

permissions:
  security-events: write

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - { region: "us-east-1", repository: "git-action-template" , repository-alias: "s9y4w8l4"}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region:  ${{ matrix.config.region }}

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: ${{ matrix.config.repository-alias }}
          REPOSITORY: ${{ matrix.config.repository }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_NAME=$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE_NAME .
          echo "DOCKER_IMAGE=$IMAGE_NAME" >> $GITHUB_ENV
  
  Trivy-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run static analysis
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Deploy:
  #   runs-on: ubuntu-latest

      # - name: Build, tag, and push docker image to Amazon ECR Public
      #   env:
      #     REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
      #     REGISTRY_ALIAS: ${{ matrix.config.repository-alias }}
      #     REPOSITORY: ${{ matrix.config.repository }}
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
      #     docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
